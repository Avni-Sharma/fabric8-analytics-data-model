apiVersion: v1
kind: Template
labels:
  template: bayesian-gremlin-server
metadata:
  name: bayesian-gremlin-server
  annotations:
    description: bayesian-gremlin-server
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: bayesian-gremlin-${CHANNELIZER}
    name: bayesian-gremlin-${CHANNELIZER}
  spec:
    ports:
    - name: "8182"
      port: 8182
      protocol: TCP
      targetPort: 8182
    selector:
      service: bayesian-gremlin-${CHANNELIZER}
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      service: bayesian-gremlin-${CHANNELIZER}
    name: bayesian-gremlin-${CHANNELIZER}
  spec:
    replicas: 1
    selector:
      service: bayesian-gremlin-${CHANNELIZER}
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: bayesian-gremlin-${CHANNELIZER}
      spec:
        containers:
        - env:
          - name: REST
            value: ${REST_VALUE}
          - name: DYNAMODB_CLIENT_ENDPOINT
            value: ${DYNAMODB_CLIENT_ENDPOINT}
          - name: DYNAMODB_PREFIX
            value: ${DYNAMODB_PREFIX}
          - name: DYNAMODB_CLIENT_CREDENTIALS_CLASS_NAME
            value: ${DYNAMODB_CLIENT_CREDENTIALS_CLASS_NAME}
          - name: DYNAMODB_CLIENT_CREDENTIALS_CONSTRUCTOR_ARGS
            value: ${DYNAMODB_CLIENT_CREDENTIALS_CONSTRUCTOR_ARGS}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws
                key: dynamodb-access-key-id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws
                key: dynamodb-secret-access-key
          image: ${GREMLIN_IMAGE}
          name: bayesian-gremlin
          ports:
          - containerPort: 8182
            protocol: TCP
          resources:
            requests:
              memory: ${REQUESTED_MEMORY}
        restartPolicy: Always
    test: false
    triggers:
    - type: ConfigChange
  status: {}
parameters:
- description: Value of the 'storage.dynamodb.client.credentials.class-name' property in dynamodb.properties
  name: DYNAMODB_CLIENT_CREDENTIALS_CLASS_NAME
  required: true
  value: "com.amazonaws.auth.DefaultAWSCredentialsProviderChain"
- description: Value of the 'storage.dynamodb.client.endpoint' property in dynamodb.properties
  name: DYNAMODB_CLIENT_ENDPOINT
  required: false
  value: "https://dynamodb.us-east-1.amazonaws.com"
- description: Value of the 'dynamodb.prefix' property in dynamodb.properties
  name: DYNAMODB_PREFIX
  required: true
- description: Change the channelizer being used to deploy the gremlin server. Set this to "1" for HTTP channelizer, and "0" for WebSocket channelizer. Defaults to "0" i.e. WebSocket.
  name: REST_VALUE
  value: "0"
- description: GREMLIN_IMAGE
  name: GREMLIN_IMAGE
  required: true
  value: registry.centos.org/datamodel/gremlin:concaf
- description: REQUESTED_MEMORY
  name: REQUESTED_MEMORY
  required: true
  value: 2Gi
- description: Name of the channelizer being used. Setting this will not change the channelizer, this will merely influence the names of OpenShift objects being created. To change the channelizer, see REST_VALUE.
  name: CHANNELIZER
  required: true
  value: ws
